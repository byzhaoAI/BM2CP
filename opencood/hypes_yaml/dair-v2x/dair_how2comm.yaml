name: dair_how2comm
data_dir: "data/dair/DAIR-V2X-C/cooperative-vehicle-infrastructure"
root_dir: "data/dair/DAIR-V2X-C/cooperative-vehicle-infrastructure/train.json"
validate_dir: "data/dair/DAIR-V2X-C/cooperative-vehicle-infrastructure/val.json"
test_dir: "data/dair/DAIR-V2X-C/cooperative-vehicle-infrastructure/val.json"

yaml_parser: "load_point_pillar_params"
train_params:
  batch_size: &batch_size 1
  epoches: 20
  eval_freq: 2
  save_freq: 1
  max_cav: &max_cav 5
  frame: &frame 1

device: &device cuda
train: &train True

#comm_range: 100
noise_setting:
  add_noise: False
  args: 
    pos_std: 0.2
    rot_std: 0.2
    pos_mean: 0
    rot_mean: 0

fusion:
  core_method: 'IntermediateFusionDatasetDAIR_Multi' 
  args:
    cur_ego_pose_flag: true

preprocess:
  core_method: 'SpVoxelPreprocessor'
  args:
    voxel_size: &voxel_size [0.4, 0.4, 4]
    max_points_per_voxel: 32
    max_voxel_train: 32000
    max_voxel_test: 70000
  cav_lidar_range: &cav_lidar  [-100.8, -40, -3, 100.8, 40, 1]

data_augment:
  - NAME: random_world_flip
    ALONG_AXIS_LIST: [ 'x' ]

  - NAME: random_world_rotation
    WORLD_ROT_ANGLE: [ -0.78539816, 0.78539816 ]

  - NAME: random_world_scaling
    WORLD_SCALE_RANGE: [ 0.95, 1.05 ]


postprocess:
  core_method: 'VoxelPostprocessor' 
  gt_range: *cav_lidar
  anchor_args:
    cav_lidar_range: *cav_lidar
    l: 4.5
    w: 2
    h: 1.56
    r: [0, 90]
    feature_stride: 2
    num: &achor_num 2
  target_args:
    pos_threshold: 0.6
    neg_threshold: 0.45
    score_threshold: 0.20
  order: 'hwl' 
  max_num: 100 
  nms_thresh: 0.15


model:
  core_method: point_pillar_how2comm
  
  args:
    voxel_size: *voxel_size
    lidar_range: *cav_lidar
    anchor_number: *achor_num
    max_cav: *max_cav
    compression: 0 
    backbone_fix: false
    flow_flag: true  

    pillar_vfe:
      use_norm: true
      with_distance: false
      use_absolute_xyz: true
      num_filters: [64]
    point_pillar_scatter:
      num_features: 64

    base_bev_backbone:
      resnet: True
      layer_nums: &layer_nums [3, 4, 5]
      layer_strides: [2, 2, 2]
      num_filters: &num_filters [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filter: [128, 128, 128]
      compression: 0
      voxel_size: *voxel_size
    shrink_header:
      kernal_size: [ 3 ]
      stride: [ 1 ]
      padding: [ 1 ]
      dim: [ 256 ]
      input_dim: 384 

    fusion_args:
      voxel_size: *voxel_size
      downsample_rate: 1
      in_channels: 256
      n_head: 8
      dropout_rate: 0
      only_attention: true
      communication:
        thre: 0.01
        compressed_dim: 2  
        request_flag: True
        gaussian_smooth:
          k_size: 5
          c_sigma: 1.0
      communication_flag: True
      agg_operator:
        mode: 'STCFormer'
        feature_dim: 256
        n_head: 8
        depth: 1
        embed_pos: None
        with_spe: false
        with_scm: false
        hetero: False
      multi_scale: true
      frame: *frame
      layer_nums: *layer_nums
      num_filters: *num_filters
      temporal_fusion:  
        height: [100, 50, 25, 100]
        width: [352, 176, 88, 352]
        layers: 1 
        channel: [64, 128, 256, 256]
        gate: False
        n_head: 5
        rte_ratio: 1
        hidden_dim: [64, 128, 256, 256]  
        delay: 0
        compressed_dim: 2  
      only_ego: False


loss:
  core_method: point_pillar_loss
  args:
    cls_weight: 1.0
    reg: 2.0

optimizer:
  core_method: Adam
  lr: 0.002
  args:
    eps: 1e-10
    weight_decay: 1e-4

lr_scheduler:
  core_method: multistep 
  gamma: 0.1
  step_size: [10, 20]
